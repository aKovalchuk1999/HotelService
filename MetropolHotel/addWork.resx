<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>